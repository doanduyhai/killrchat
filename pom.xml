<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.datastax.demo</groupId>
    <artifactId>killrchat</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>
    <properties>
        <start-class>com.datastax.demo.killrchat.Application</start-class>
        <achilles.version>3.1.3</achilles.version>
        <spring-boot.version>1.2.0.RELEASE</spring-boot.version>
        <spring-messaging.version>4.1.3.RELEASE</spring-messaging.version>
        <slf4j.version>1.7.6</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.10.8</mockito.version>
        <assertj.version>1.6.0</assertj.version>
        <javax.inject.version>1</javax.inject.version>
        <hibernate-validator.version>5.0.2.Final</hibernate-validator.version>
        <el-api.version>3.0.0</el-api.version>
        <el-impl.version>2.2</el-impl.version>
        <joda-time.version>2.3</joda-time.version>
        <logback.conf.file>${basedir}/src/main/resources/logback_dev.xml</logback.conf.file>
    </properties>

    <dependencies>

        <!--Achilles-->
        <dependency>
            <groupId>info.archinnov</groupId>
            <artifactId>achilles-core</artifactId>
            <version>${achilles.version}</version>
        </dependency>

        <dependency>
            <groupId>info.archinnov</groupId>
            <artifactId>achilles-embedded</artifactId>
            <version>${achilles.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!--@Inject-->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>

        <!--Spring-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!--WebSocket-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
            <version>${spring-messaging.version}</version>
        </dependency>

        <!--Joda time-->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>


        <!-- Bean Validation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${el-api.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>el-impl</artifactId>
            <version>${el-impl.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>info.archinnov</groupId>
            <artifactId>achilles-junit</artifactId>
            <version>${achilles.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <compilerVersion>1.7</compilerVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <jvmArguments> -Dlogback.configurationFile=${logback.conf.file}</jvmArguments>
                    <arguments>
                        <argument>--spring.profiles.active=${spring.profiles.active}</argument>
                    </arguments>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <manifest>
                            <mainClass>${start-class}</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.kelveden</groupId>
                <artifactId>maven-karma-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                    <configFile>src/test/javascript/karma.conf.js</configFile>
                    <reportsDirectory>${project.build.directory}/karma-reports</reportsDirectory>
                    <autoWatch>false</autoWatch>
                    <singleRun>true</singleRun>
                    <colors>true</colors>
                    <skipKarma>false</skipKarma>
                    <skipTests>false</skipTests>
                    <karmaFailureIgnore>false</karmaFailureIgnore>
                    <reporters>dots</reporters>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Spring profile to use -->
                <spring.profiles.active>dev</spring.profiles.active>
                <logback.conf.file>${basedir}/src/main/resources/logback_dev.xml</logback.conf.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.comphenix.maven</groupId>
                        <artifactId>yaml-properties-plugin</artifactId>
                        <version>0.1.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>read-yaml-properties</goal>
                                </goals>
                                <phase>process-sources</phase>
                                <configuration>
                                    <files>
                                        <!-- YAML files that will be loaded. The element name is the file ID. -->
                                        <application>${basedir}/src/main/resources/config/application.yml</application>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>create_embedded_cassandra_folders</id>
                                <phase>process-resources</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${yaml.application.dev.cassandra.folders.data}"/>
                                        <mkdir dir="${yaml.application.dev.cassandra.folders.commitlog}"/>
                                        <mkdir dir="${yaml.application.dev.cassandra.folders.saved_caches}"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>
        <profile>
            <id>prod</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!-- Spring profile to use -->
                <spring.profiles.active>prod</spring.profiles.active>
                <logback.conf.file>${basedir}/src/main/resources/logback_prod.xml</logback.conf.file>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
        <pluginRepository>
            <id>comphenix-rep</id>
            <name>Comphenix Maven Releases</name>
            <url>http://repo.comphenix.net/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>
</project>
